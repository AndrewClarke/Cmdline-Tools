#!/bin/ksh

function usage {
   echo >&2 "usage: $0 [-f] [-r]

where:  -f  full: rollback, migrate and re-seed
        -r  rollback only

Without -f, only runs 'rake db:migrate' && 'rake db:seed'
-f and -r are mutually exclusive.
"
   exit 1
}


fflag= rflag=
while getopts :fr ch; do
    case "$ch" in
      f) fflag=1 ;;
      r) rflag=1 ;;
      *) usage ;;
    esac
done
shift $((OPTIND-1))

[[ -n "$fflag" && -n "$rflag" ]] && usage


function bek {
  bundle exec rake "$@"
}

if [[ -z "$APPL_TOP" ]]; then
    echo >&2 "Cannot find \$APPL_TOP environment variable"
    return 1
fi

if [[ -z "$APPL" ]]; then
    echo >&2 "Cannot find \$APPL environment variable"
    return 1
fi

if [[ "$PWD" != "$APPL"?(/*) ]]; then
    echo >&2 "Can only be seedy inside an application directory"
    return 1
fi


cd "$APPL"

if [[ -z "$fflag$rflag" ]]; then
    bek db:migrate && bek --trace db:seed
else
    last_mig="$(ls "$APPL/db/migrate" | tail -1)"

    if [[ "$last_mig" != *_survey?(s)_* ]]; then
        echo "CAN'T BE SEEDY - last migration is not about surveys"
        echo "  $last_mig"
        return 1
    fi


    nthings=$(ls "$APPL/db/migrate"/*_survey?(s)_* | wc -l)

    bek db:migrate && bek db:rollback STEP=$nthings && { [[ -n "$rflag" ]] || { bek db:migrate && bek --trace db:seed; }; }
fi

