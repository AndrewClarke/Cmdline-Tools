#!/usr/bin/env python

import virtualbox
import threading
import dbus
import os
import os.path

os.system("/usr/bin/sudo /home/aclarke/bin/vbox-own")

if os.path.isfile("/home/aclarke/.no-vbox"):
    exit(0)

logname = os.environ['LOGNAME']
engine = { 'brendan' : 'Brendan', 'nicole' : 'Nicole', 'jacquie' : 'Jacquie', 'ryan' : 'Ryan' }.get(logname)

if engine == None: exit(1)

vbox = virtualbox.VirtualBox()
vm = vbox.find_machine(engine)
session = virtualbox.Session()
progress = vm.launch_vm_process(session, 'gui', '')
progress.wait_for_completion(-1)

sem = threading.Semaphore(0)

def callback(event):
    if (event.state == virtualbox.library.MachineState.powered_off
     or event.state == virtualbox.library.MachineState.saved
     or event.state == virtualbox.library.MachineState.teleported
     or event.state == virtualbox.library.MachineState.aborted
     or event.state == virtualbox.library.MachineState.stuck):
        sem.release()

vbox.register_on_machine_state_changed(callback)
sem.acquire()

# qdbus org.kde.ksmserver /KSMServer logout 0 0 0
session_bus = dbus.SessionBus()
proxy = session_bus.get_object('org.kde.ksmserver', '/KSMServer')
proxy.logout(0, 0, 0)

