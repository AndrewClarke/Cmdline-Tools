#!/bin/bash
myname="${0##*/}"
shopt -s extglob

# performs a table schema dump on a MySQL database.
# TODO: cope with other database engines as needed.

: ${DBNAME:=mysql}
lflag=
Bflag=-B
tflag=-t
vflag=

usage() {
    [[ $# -gt 0 ]] && echo >&2 "$myname:" "$@"

    echo >&2 "usage: $myname [-v] [+t] [+B] [-d database]   -l ['likepattern'] | tabname ...
where   -d  select database (default \$DBNAME:=mysql)
        -l  list tables (optionally like pattern)
        -v  emit table name before each table (how?)
        -t  pass mysql --table option (default; switch off with +t)
        -B  pass mysql --batch option (default; switch off with +B)

-d ?  shows all available databases - no other flags allowed
"

    exit 1
}


# why do BSD-inspired getopts like to be so complicated but hate +opt ???
while [[ "X$1" = X[-+]* ]]; do
    val="${1:0:1}"
    opt="${1:1}"
    shift

    while [[ -n "$opt" ]]; do
        ch="${opt:0:1}"
        opt="${opt:1}"

        # following opts consume a mandatory arg: -d
        arg=
        if [[ "X$val$ch" == X-[d] ]]; then
            if [[ -z "$opt" ]]; then
                arg="$1"
                shift
            else
                arg="$opt"
                opt=
            fi
        fi

        case "$val$ch" in
          -d) DBNAME="$arg" ;;
          -l) lflag=1 ;;
          -v) vflag=1 ;;
          +v) vflag= ;;
          -t) tflag=-t ;;
          +t) tflag= ;;
          -B) Bflag=-B ;;
          +B) Bflag= ;;

          *)  usage "unknown option $val$ch" ;;
        esac
    done
done


show_dbs=
if [[ "$DBNAME" = '?' ]]; then
    show_dbs=1
    DBNAME=mysql
fi

if [[ -n "$show_dbs" ]]; then
    echo "show databases;"
elif [[ -z "$lflag" ]]; then
    [[ $# -eq 0 ]] && usage

    for i in "$@"; do
        [[ -n "$vflag" ]] && echo "select 'TABLE $i' as 'table name';"
        echo "describe $i;"
    done
elif [[ $# -eq 0 ]]; then
    echo "show tables;"
else
    echo "show tables like '%$*%';"
fi | mysql -D $DBNAME $tflag $Bflag | {
    first=1
    while read line; do
        case "$line" in
          ('| TABLE '+([a-zA-Z0-9_])' |')
            [[ -z "$first" ]] && echo
            first=

            name="${line#'| TABLE '}"
            name="${name%%*(' ')'|'}"
            echo "TABLE $name:"
            ;;

          ('| table name '*(' ')'|')
            : ;;

          (++(-)+)
            : ;;

          (*)
            [[ -n "$vflag" ]] && echo -n "  "
            echo "$line" ;;
        esac
    done
}

