
function vid {
    vim -d "$@"
}

function vidd {
    for i in "$@"; do
        vim -d "$i" ~-/"$i" || break
    done
}

function vif {
    vim "+/$1" $(grep -ils "$1" *.org *.src *.trg *.ext)
}

function vig {
    typeset i

    # go looking for the first non-option - to skip possible flags to grep
    for i in "$@"; do
        [[ "$i" != -* ]] && break
    done

    vim "+/$i" $(grep++ -l "$@")
}

function vio {
    vim -o "$@"
}

function viO {
    vim -O "$@"
}

function vit {
    vim -t "$1"
}

function viw {
    vim $(which "$@")
}


function vi {
    # if prove inside a $APP which is also a Rails project
    #     replace any arg starting with M/ V/ or C/ with $APP/app/@(models|views|controllers)
    # ALSO: when lazy-cutting-pasting from diff lines, it's nice to trim off the leading [ab]/

    local i raily=
    [[ -n "$APP" && -d "$APP/app" ]] && [[ "$PWD" == "$APP"?(/*) ]] && raily=1

    typeset -a args
    for i in "$@"; do
      if [[ -n "$raily" && "$i" = [MVC]/* ]]; then
        case "$i" in
          (M/*) i="$APP/app/models/${i#M/}" ;;
          (V/*) i="$APP/app/views/${i#V/}" ;;
          (C/*) i="$APP/app/controllers/${i#C/}" ;;
        esac
      elif [[ "$i" = a/* && ! -d a ]]; then
        i="${i#a/}"
      elif [[ "$i" = b/* && ! -d b ]]; then
        i="${i#b/}"
      fi

      args+=("$i")
    done
    set -- "${args[@]}"

    vim "$@"
}

