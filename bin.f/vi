
function vid {
    vim -d "$@"
}

function vidd {
    for i in "$@"; do
        vim -d "$i" ~-/"$i" || break
    done
}

function vif {
    vim "+/$1" $(grep -ils "$1" *.org *.src *.trg *.ext)
}

function vig {
    typeset i

    # go looking for the first non-option - to skip possible flags to grep
    for i in "$@"; do
        [[ "$i" != -* ]] && break
    done

    vim "+/$i" $(grep++ -l "$@")
}

function vio {
    vim -o "$@"
}

function viO {
    vim -O "$@"
}

function vit {
    vim -t "$1"
}

function viw {
    vim $(which "$@")
}


function vi {
    # if PWD is inside a $APPL which is also a Rails project:
    #   replace any arg starting with M/ V/ C/ or H/ with $APPL/app/@(models|views|controllers|helpers)
    #   also support L/ or P/ for $APPL/@(lib|public)
    #   to help when lazy-cutting-pasting from diff lines, trim off the leading [ab]/
    #   trim off trailing : for a similar reason

    local i raily=
    [[ -n "$APPL" && -d "$APPL/app" ]] && [[ "$PWD" == "$APPL"?(/*) ]] && raily=1

    typeset -a args
    for i in "$@"; do
        if [[ -n "$raily" && "$i" = [MVCHLP]/* ]]; then
            case "$i" in
              (M/*) i="$APPL/app/models/${i#M/}" ;;
              (V/*) i="$APPL/app/views/${i#V/}" ;;
              (C/*) i="$APPL/app/controllers/${i#C/}" ;;
              (H/*) i="$APPL/app/helpers/${i#H/}" ;;
              (L/*) i="$APPL/lib/${i#L/}" ;;
              (P/*) i="$APPL/public/${i#P/}" ;;
            esac
        elif [[ "$i" = a/* && ! -d a ]]; then
            i="${i#a/}"
        elif [[ "$i" = b/* && ! -d b ]]; then
            i="${i#b/}"
        fi

        [[ ! -e "$i" && "$i" = *: ]] && i="${i%:}"

        args+=("$i")
    done
    set -- "${args[@]}"

    vim "$@"
}

